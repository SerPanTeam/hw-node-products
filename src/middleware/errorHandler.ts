import { Request, Response, NextFunction } from "express";

// ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π middleware –æ—à–∏–±–æ–∫ (–Ω–µ—è–≤–Ω–æ `void`)
const errorHandler = (err: any, req: Request, res: Response, next: NextFunction) => {
    console.error("üî• Error:", err.message);

    // ‚úÖ –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON ‚Üí 400 Bad Request
    if (err.type === "entity.parse.failed") {
        res.status(400).json({ message: "Invalid JSON format" });
        return;
    }

    // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –æ—à–∏–±–∫–∏ —Å—Ç–∞—Ç—É—Å, –∏–Ω–∞—á–µ 500
    const statusCode = err.status || 500;

    res.status(statusCode).json({
        message: err.message || "Something went wrong!",
        stack: process.env.NODE_ENV === "production" ? undefined : err.stack
    });

    // ‚úÖ –ù–∏–∫–∞–∫–æ–≥–æ `return` ‚Üí TypeScript —Ç–µ–ø–µ—Ä—å –Ω–µ —Ä—É–≥–∞–µ—Ç—Å—è
};

export default errorHandler;
